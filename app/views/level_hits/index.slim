- params[:relative_price_targets] ||= '1'
- price_target_format = params[:relative_price_targets] == '1' ? 'percentage' : 'absolute'
- past_price_format  = params[:relative_price_targets] == '1' ? 'percentage' : 'absolute'

main.container-fluid
  h1.display-3 Level Hits

  form#list-config(action=level_hits_path class='my-2')
    = render 'instruments/filter_by_set'
    = render 'instruments/filter_by_currency'
    = render 'instruments/filter_by_availability'
    .row.mb-3
      .col
        = render 'instruments/filter_by_tickers'
        = render 'instruments/pagination_options'
      .col
    .row
      .col-sm-1
      .col-sm-10
        = bs_check_box :price_targets, 'Price targets', inline: true
        = bs_check_box :relative_price_targets, 'relative', inline: true, default: '1'
        br
        = bs_check_box :exact, 'Exact', inline: true
        = bs_check_box :important, 'Important', inline: true, default: '1'
        = bs_check_box :manual, 'Manual', inline: true

  table.table.table-sm.table-hover.table-font-sm.tickers-table.table-selectable
    thead.table-dark
      tr
        th
        th
        th
        th(data-sort="ticker") Ticker
        th.money-cell Level
        th.text-end Type
        th Name
        th.money-cell Cap
        th Sector
        th.text-end Date
        th(data-sort="aggregates.days_up desc") Trn
        th.money-cell(title=l(Current.yesterday, format: :week_day)) 1d ﹪
        th.money-cell(title=l(Current.d2_ago,    format: :week_day)) 2d ﹪
        th.money-cell(title=l(Current.d3_ago,    format: :week_day)) 3d ﹪
        th.money-cell(title=l(Current.w1_ago,    format: :week_day)) 1w ﹪
        th.money-cell(title=l(Current.month_ago, format: :week_day)) 1m ﹪
    tbody
      - @hits.each do |hit|
        - inst = instrument = hit.instrument
        - info = instrument.info
        tr(data-ticker=hit.ticker)
          td= instrument_logo_button inst
          td= known_icon instrument
          td= type_icon instrument
          td= inst.ticker
          td.money-cell.open-chart(class=class_names(level_hit_color(hit)))= price_span hit.level_value, unit: instrument.currency
          td.text-end(class=class_names(level_hit_color(hit)))= hit.kind
          td.instrument-name= instrument.name
          td.money-cell(title="#{number_with_delimiter inst.info&.shares} shares")= number_to_currency inst.info&.marketcap_mil, unit: currency_span(inst.currency), precision: 0
          td= sector_badge instrument
          td.text-end= date_as_wday hit.date
          td= growth_badge instrument.aggregate
          td.money-cell.muted-cell       = relative_price inst.d1_ago_close, inst.base_price, unit: inst.currency, format: past_price_format, inverse: true
          td.money-cell.muted-cell       = relative_price inst.d2_ago_close, inst.base_price, unit: inst.currency, format: past_price_format, inverse: true
          td.money-cell.muted-cell       = relative_price inst.d3_ago_close, inst.base_price, unit: inst.currency, format: past_price_format, inverse: true
          td.money-cell                  = relative_price inst.w1_ago_close, inst.base_price, unit: inst.currency, format: past_price_format, inverse: true
          td.money-cell                  = relative_price inst.m1_ago_close, inst.base_price, unit: inst.currency, format: past_price_format, inverse: true


  = paginate @hits, window: 20
  = tickers_copy_list @hits.map(&:instrument).uniq
