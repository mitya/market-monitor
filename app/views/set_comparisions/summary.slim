- tickers = params[:tickers].split.map(&:upcase).compact.uniq.to_set if params[:tickers].present?
- currency = params[:currency].presence
- availability = params[:availability].presence
- selector = 'last'
- precision = 1

main.container-fluid.gainers-dashboard
  details.my-2.mx-3
    summary
    form#list-config(action=summary_set_comparision_path class='my-2')
      = render 'instruments/filter_by_currency', lw: 2
      = render 'instruments/filter_by_availability', lw: 2

  .container-fluid
    .row
      - @set_groups.each do |sets|
        .col.flex-grow-0.gainers-col
          - sets.each do |set|
            h6.ps-1(class=class_names('is-green': set.key =~ /up_break|up_test/, 'is-red': set.key =~ /down_break|down_test/))
              = category_title set.key
            table.table.table-sm.table-hover.table-font-sm.tickers-table.table-no-border.table-sm-v.dash-table
              tbody
                - instruments = set.instruments.includes(:aggregate)
                - instruments = instruments.select { tickers.include? _1.ticker } if tickers
                - instruments = instruments.select { _1.currency == currency } if currency
                - instruments = instruments.select { _1.premium? } if availability == 'premium'
                - instruments = instruments.reject { _1.premium? } if availability == 'tinkoff'
                - instruments = instruments.sort_by { _1.stored_gain_since(selector) || -1 }
                - instruments = instruments.reverse
                - instruments.each do |inst|
                  - value = inst.stored_gain_since(selector)
                  tr
                    td.ticker-cell(title=inst.name class=class_names('opacity-40': inst.illiquid? || inst.premium?))= inst.clean_ticker
                    td.money-cell.price-cell= format_price inst.last, unit: inst.currency
                    td.money-cell.change-cell
                      - if value
                        - if value.abs >= 0.08
                          = colorized_ratio value, precision: precision, format: '%n'
                        - else
                          = percentage_bar value, classes: class_names(red_green_class(value > 0), 'solid-narrow float-end'), rtl: true

javascript:
  window.DashboardPeriod = "#{ params[:selector] }"
