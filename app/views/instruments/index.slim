- page_title! "Instruments"

- @label_width = 2
- params[:relative_past_prices] ||= '1'
- params[:recent_prices] ||= '1'
- params[:low_since] ||= 2.weeks.ago.to_date.to_s
- params[:low_gain] ||= 10

- @past_price_format  = params[:relative_past_prices] == '1' ? 'percentage' : 'absolute'
- @price_target_format = params[:relative_price_targets] == '1' ? 'percentage' : 'absolute'
- @show_volume = params[:volume] == '1'
- @show_volume_diff = params[:volume_diff] == '1'
- @chart_volatility = params[:volatility] == '1' && params['chart_volatility'] == '1'
- @show_volatility = params[:volatility] == '1' && !@chart_volatility
- @is_portfolio = params[:portfolio] == '1'
- @show_historical_prices = !@show_volume && !@show_volatility && !@chart_volatility && !@is_portfolio
- @show_recent_prices = params[:recent_prices] == '1'
- @show_special_dates = params[:special_dates] == '1'
- @show_recent_years = params[:recent_years] == '1'
- @volatility_format = :percentage
- @volatility_cell_class = @volatility_format == :bar ?  'indicator-cell' : 'money-cell'
- @show_low = params[:low] == '1'
- @show_last_insider_buys = params[:last_insider_buys] == '1'
- @vtb_marginal_info = false
- @show_sa = params[:sa] == '1'
- @show_sector = !@categories
- @show_open = false
- @show_ema_trends = params[:ema_trends] == '1'

main.container-fluid.mb-4
  form#list-config(action=(@categories ? grouped_instruments_path : instruments_path) class='my-2')
    .row.mb-3
      .col
        = render 'filter_by_currency'
        = render 'filter_by_availability'
        = render 'filter_by_type'
        = render 'filter_by_tickers'
        = render 'filter_by_sector'
        = render 'filter_by_sector_code'
        = render 'order_options'
        = render 'pagination_options'
      .col
        .row.mb-3
          .col-sm-1
          .col-sm-10
            = bs_check_box :fundamentals, 'Fundamentals'
            = bs_check_box :volume, 'Volume', inline: true
            = bs_check_box :volume_diff, 'diff', default: false, inline: true
            br
            = bs_check_box :volatility, 'Volatility', inline: true
            = bs_check_box :chart_volatility, 'as chart', inline: true
            br
            = bs_check_box :price_targets, 'Price targets', inline: true
            = bs_check_box :relative_price_targets, 'relative', inline: true
            = bs_check_box :relative_past_prices, 'Use relative past prices', default: true
            = bs_check_box :recent_prices, 'Recent prices', default: true
            = bs_check_box :sa, 'Seeking Alpha', default: false
            div
              = bs_check_box :low, 'Recent low', inline: true
              => label_tag :low_since, "since: "
              => select_tag :low_since, options_for_select(recent_dates_options, params[:low_since]), class: "form-select form-select-sm d-inline w-auto me-3"
              => label_tag :low_gain, "gained: "
              .d-inline-block.w-auto
                .input-group.input-group-sm
                  = number_field_tag :low_gain, params[:low_gain], class: "form-control text-center", style: "width: 60px"
                  .input-group-text %
            = bs_check_box :special_dates, 'Special dates', inline: true
            = bs_check_box :recent_years, 'Recent years', inline: true
            = bs_check_box :last_insider_buys, 'Last Insider buys', inline: true
            = bs_check_box :alarm, 'With alarms', inline: true
            br
            = bs_check_box :portfolio, 'Portfolio editor', inline: true
            = bs_check_box :active, 'Active only', inline: true
            br
            = bs_check_box :ema_trends, 'EMA Trends'
    = render 'filter_by_set', lw: 1

  = page_entries_block @instruments
  = paginate @instruments, window: 20

  table.table.table-sm.table-hover.table-font-sm.tickers-table
    thead.table-dark
      tr
        th
        th
        th(data-sort="ticker") Ticker
        th
        th
        th Name
        - if @is_portfolio
          th
          th.money-cell Tinkoff
          th.money-cell IIS
          th.money-cell VTB
          th.money-cell Total
          th.money-cell(data-sort="portfolio.cost_in_usd") Cost
          th.money-cell Ideal
          th.money-cell(data-sort="portfolio.ideal_cost_in_usd") Ideal Cost
          th.money-cell(data-sort="portfolio.cost_diff") Diff
        - if @show_sector
          th Sector
        th.money-cell.border-end.pe-2(data-sort="stats.marketcap desc") Cap (M)
        - if @vtb_marginal_info
          th.money-cell Ln
          th.money-cell Sh
        - if params[:fundamentals]
          th.money-cell(data-sort="stats.pe desc") P/E
          th.money-cell(data-sort="stats.beta desc") ß
          th.money-cell.border-end.pe-2(data-sort="stats.dividend_yield desc") Yield
        - if params[:price_targets]
          th.money-cell Low
          th.money-cell Average
          th.money-cell High
          th.money-cell.border-end.pe-2
        th.money-cell Last
        th.money-cell(data-sort="prices.change desc") ﹪
        - if @show_open
          th.money-cell.border-end.pe-2(title=l(Current.today,     format: :week_day)) Open ﹪
        - if @show_recent_prices
          th.money-cell(title=l(Current.d2_ago, format: :week_day) data-sort="aggregates.d2") 2d ﹪
          th.money-cell(title=l(Current.d3_ago, format: :week_day) data-sort="aggregates.d3") 3d ﹪
          th.money-cell(title=l(Current.d4_ago, format: :week_day) data-sort="aggregates.d4") 4d ﹪
          th.money-cell(title=l(Current.w1_ago, format: :week_day) data-sort="aggregates.w1") 1w ﹪
          th.money-cell(title=l(Current.w2_ago, format: :week_day) data-sort="aggregates.w2") 2w ﹪
          th.money-cell(title=l(Current.m1_ago, format: :week_day) data-sort="aggregates.m1") 1m ﹪
          th.money-cell.border-end.pe-2(data-sort="aggregates.y2021") ytd ﹪

        - if @show_sa
          th.money-cell SA
          th
          th


        - if @show_low
          th.text-end(data-sort="aggregates.lowest_day_date desc") Low
          th.money-cell.border-end.pe-2(data-sort="aggregates.lowest_day_gain desc") Gain

        - if @show_volume_diff
          th.money-cell(title=l(Current.today,     format: :week_day)) 𝑉
          th.money-cell(title=l(Current.yesterday, format: :week_day) data-sort="aggregates.d1_volume desc") 1d 𝑉
          th.money-cell(title=l(Current.d2_ago,    format: :week_day) data-sort="aggregates.d2_volume desc") 2d 𝑉
          th.money-cell(title=l(Current.d3_ago,    format: :week_day) data-sort="aggregates.d3_volume desc") 3d 𝑉
          th.money-cell(title=l(Current.d4_ago,    format: :week_day) data-sort="aggregates.d4_volume desc") 4d 𝑉
          th.money-cell(title=l(Current.w1_ago,    format: :week_day) data-sort="aggregates.w1_volume desc") 1w 𝑉
          th.money-cell(title=l(Current.w2_ago,    format: :week_day) data-sort="aggregates.w2_volume desc") 2w 𝑉
          th.money-cell(title=l(Current.month_ago, format: :week_day) data-sort="aggregates.m1_volume desc") 1m 𝑉

        - if @show_volatility
          th.money-cell(title=l(Current.today,     format: :week_day)) σ
          th.money-cell(title=l(Current.yesterday, format: :week_day) data-sort="aggregates.d1_vol desc") 1d σ
          th.money-cell(title=l(Current.d2_ago,    format: :week_day) data-sort="aggregates.d2_vol desc") 2d σ
          th.money-cell(title=l(Current.d3_ago,    format: :week_day) data-sort="aggregates.d3_vol desc") 3d σ
          th.money-cell(title=l(Current.d4_ago,    format: :week_day) data-sort="aggregates.d4_vol desc") 4d σ
          th.money-cell(title=l(Current.w1_ago,    format: :week_day) data-sort="aggregates.w1_vol desc") 1w σ
          th.money-cell(title=l(Current.w2_ago,    format: :week_day) data-sort="aggregates.w2_vol desc") 2w σ
          th.money-cell(title=l(Current.month_ago, format: :week_day) data-sort="aggregates.m1_vol desc") 1m σ

        - if @chart_volatility
          th.text-left Volatility

        - if @show_volume
          th.money-cell(data-sort="aggregates.d1_money_volume desc") (m) Vol 1d
          th.money-cell Vol 2d
          th.money-cell Vol 3d
          th.money-cell Vol 1w
          th.money-cell Vol 1m
          th.money-cell(data-sort="stats.d5_money_volume desc") Vol 5d ∑

        - if @show_special_dates
          - MarketCalendar.current_special_dates.each do |date|
            th.money-cell(data-sort="aggregates.#{date.strftime 'd%Y_%m%d'}")= date.strftime('%b %e ﹪')
        - if @show_recent_years
          - MarketCalendar.current_recent_years.each do |year|
            th.money-cell(data-sort="aggregates.y#{year}")= "#{year} ﹪"

        th
        - if @show_last_insider_buys
          th.money-cell Insider
        - if @show_ema_trends
          th.money-cell(data-sort="date_indicators.ema_20_trend desc") MA20
          th.money-cell(data-sort="date_indicators.ema_50_trend desc") MA50
          th.money-cell(data-sort="date_indicators.ema_200_trend desc") MA200
        th(data-sort="aggregates.days_up desc") Trn
        th

    tbody
      - if @categories
        - @categories.each do |category, tickers|
          = render 'category_row', category: category
          - tickers.sort.each do |ticker|
            - if inst = @instruments_index[ticker]
              = render 'instrument_row', inst: inst
      - else
        - instruments = @instruments
        - instruments = instruments.select { |inst| inst.portfolio_item&.active? } if params[:active] == '1'
        / - instruments = instruments.select { |inst| inst.info.d5_money_volume < 500_000_000 }
        - instruments = instruments.sort_by { |inst| inst.info&.vtb_long_risk.to_f } if @vtb_marginal_info
        - instruments = instruments.sort_by { |inst| inst.portfolio_item&.cost_in_usd.to_d }.reverse if @is_portfolio && params[:order] == 'portfolio.cost_in_usd'
        - instruments = instruments.sort_by { |inst| inst.portfolio_item&.ideal_cost_in_usd.to_d }.reverse if @is_portfolio && params[:order] == 'portfolio.ideal_cost_in_usd'
        - instruments = instruments.sort_by { |inst| inst.portfolio_item&.cost_in_usd.to_d - inst.portfolio_item&.ideal_cost_in_usd.to_d }.reverse if @is_portfolio && params[:order] == 'portfolio.cost_diff'
        - instruments.each do |inst|
          = render 'instrument_row', inst: inst


  = paginate @instruments, window: 20
  = tickers_copy_list instruments
